name: Test

on:
  push:
    branches:    
      - master
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    container:
      image:  qiwihui/codedays:latest

    services:
      mysql:
        image: mysql:5.7
        ports:
          - 3306:3306
        env:
          MYSQL_USER: user
          MYSQL_PASSWORD: password
          MYSQL_DATABASE: test
          MYSQL_ROOT_PASSWORD: password
        options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=3

    steps:
    - uses: actions/checkout@v2

    - name: Verify MySQL connection
      run: |
        apt-get update
        apt-get install -y default-mysql-client default-libmysqlclient-dev
        mysql --host mysql --port ${{ job.services.mysql.ports[3306] }} -uroot -ppassword -e "SHOW GRANTS FOR 'root'@'localhost'"
        mysql_tzinfo_to_sql /usr/share/zoneinfo | mysql --host mysql --port ${{ job.services.mysql.ports[3306] }} -uroot -ppassword mysql

    - name: Install dependencies
      working-directory: ./cad_server
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Lint with flake8
      working-directory: ./cad_server
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Django Testing project
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
      working-directory: ./cad_server
      run: |
        cp cad_server/local_settings_test.py cad_server/local_settings.py
        coverage erase
        coverage run --omit=*/migrations/* manage.py test
        coverage report --omit=*/migrations/* --omit=*/tests/* --include=./*.py
        test -f cad_server/local_settings.py && rm cad_server/local_settings.py || echo "done"

  trigger_deploy:
    needs: test
    if: github.ref == 'refs/heads/master'
    name: Trigger Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Repository Dispatch
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          event-type: deploy_codedays
